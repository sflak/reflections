What happens when you initialize a repository? Why do you need to do it?

-- When you initialize a repository, it creates a new .git folder which contains meta-data about that directory. To do it, navigate into your derictory, and run git init.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

-- The staging area allows the user to define exactly what files they want to put in the commit. You cant work on these files, like you can from the working directory, and the aren't part of the repo yet since you haven't commited them. This intermediary stage helps the user to create logical commits. 

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
